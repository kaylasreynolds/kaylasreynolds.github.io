{
    // Use IntelliSense to learn about possible attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    "configurations": [

        {
            "name": "Launch Chrome",
            "request": "launch",
            "type": "chrome",
            "url": "http://localhost:8080",
            "webRoot": "${workspaceFolder}"
        },
        {
            "type": "chrome",
            "request": "launch",
            "name": "Open index.html",
            "file": "/workspaces/kaylasreynolds.github.io/index.html"
        }
    ]
}   
// This configuration file is used to launch Chrome for debugging purposes.
// The first configuration launches Chrome and navigates to the specified URL.
// The second configuration opens the index.html file directly in Chrome.
// Make sure to adjust the file path in the second configuration to match your workspace structure.
// You can add more configurations as needed for different files or URLs.
// To use this file, save it as .vscode/launch.json in your project directory.
// Then, you can run the configurations from your IDE's debug panel.
// Note: Ensure that you have the necessary extensions installed in your IDE to support Chrome debugging.
// For example, in Visual Studio Code, you need the Debugger for Chrome extension.
// This file is part of the .vscode folder, which contains configuration files for Visual Studio Code.
// The .vscode folder is typically located at the root of your project directory.
// You can create this folder if it doesn't exist.
// The configurations in this file are used to set up debugging sessions for your web application.
// You can customize the configurations based on your project's requirements.
// For more information on configuring launch.json, refer to the official documentation:
// https://code.visualstudio.com/docs/editor/debugging#_launchjson-attributes
// This file is intended to be used with Visual Studio Code, but similar configurations can be adapted
// for other IDEs or editors that support debugging with Chrome.
// Make sure to keep this file updated as your project evolves.
// You can add comments like these to explain the purpose of each configuration or any specific settings.
// If you encounter issues with debugging, check the console output for error messages.
// You can also refer to the documentation of the Chrome debugging extension you are using.             